<?php

namespace AppBundle\Entity;

use Doctrine\ORM\EntityRepository;
use Doctrine\ORM\Query;

/**
 * ActivityRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class ActivityRepository extends EntityRepository
{
    
    public function findByDatesInterval($dateFrom, $dateTo, $name = "%") {

        return $this->getEntityManager()
                    ->createQuery('
                          SELECT a, aa, at
                          FROM AppBundle:Activity a
                          LEFT JOIN a.attributes aa
                          LEFT JOIN a.tags at
                          WHERE a.executedAt >= :date_to AND a.executedAt <= :date_from AND a IN(SELECT asub FROM AppBundle:Activity asub JOIN asub.tags tsub WITH tsub.name LIKE :name)
                          ORDER BY a.executedAt DESC
                      ')
                    ->setParameter('date_from', $dateFrom)
                    ->setParameter('date_to', $dateTo)
                    ->setParameter('name', $name)
                    ->getResult();
    }

    public function findByDate($date) {
        $dateTo = clone $date;
        $dateTo->modify("+1 day");

        return $this->findByDateInterval($date, $dateTo);
    }

    public function getQueryFromSearch($query) {

        
    }

    public function findByFilter($filter) {
        $query = explode(":", $filter->getQuery());

        return $this->getEntityManager()
                    ->createQuery('
                          SELECT a
                          FROM AppBundle:Activity a
                          JOIN a.attributes at WITH at.name = :name AND at.value = :value
                          WHERE a NOT IN (SELECT asub FROM AppBundle:Activity asub JOIN asub.tags tsub WITH tsub = :tag)
                          ORDER BY a.executedAt DESC
                     ')
                    ->setParameter('name', trim($query[0]))
                    ->setParameter('value', trim($query[1]))
                    ->setParameter('tag', $filter->getTag())
                    ->getResult();
    }
}
